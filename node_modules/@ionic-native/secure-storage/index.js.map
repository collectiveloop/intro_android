{"version":3,"sources":["../../../src/@ionic-native/plugins/secure-storage/index.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,OAAO,EAAE,UAAA,EAAW,MAAO,eAAA,CAAgB;AAC3C,OAAO,EAAE,eAAA,EAAiB,MAAA,EAAQ,YAAA,EAAc,iBAAA,EAAkB,MAAO,oBAAA,CAAqB;AAE9F;;GAEG;AACH;IAEE,6BAAoB,eAAoB;QAApB,oBAAe,GAAf,eAAe,CAAK;IAAI,CAAC;IAE7C;;;;OAIG;IAIH,iCAAG,GAAH,UAAI,GAAW,IAAqB,MAAM,CAAC,CAAC,CAAC;IAE7C;;;;;OAKG;IAIH,iCAAG,GAAH,UAAI,GAAW,EAAE,KAAa,IAAkB,MAAM,CAAC,CAAC,CAAC;IAEzD;;;;OAIG;IAIH,oCAAM,GAAN,UAAO,GAAW,IAAqB,MAAM,CAAC,CAAC,CAAC;IAEhD;;;OAGG;IAIH,kCAAI,GAAJ,cAA4B,MAAM,CAAC,CAAC,CAAC;IAErC;;;OAGG;IAIH,mCAAK,GAAL,cAAwB,MAAM,CAAC,CAAC,CAAC;IAEjC;;;OAGG;IAEH,0CAAY,GAAZ,cAA+B,MAAM,CAAC,CAAC,CAAC;IAE1C,0BAAC;AAAD,CA5DA,AA4DC,IAAA;;AAhDC;IAHC,eAAe,CAAC;QACf,aAAa,EAAE,SAAS;KACzB,CAAC;;;;8CAC2C;AAW7C;IAHC,eAAe,CAAC;QACf,aAAa,EAAE,SAAS;KACzB,CAAC;;;;8CACuD;AAUzD;IAHC,eAAe,CAAC;QACf,aAAa,EAAE,SAAS;KACzB,CAAC;;;;iDAC8C;AAShD;IAHC,eAAe,CAAC;QACf,aAAa,EAAE,SAAS;KACzB,CAAC;;;;+CACmC;AASrC;IAHC,eAAe,CAAC;QACf,aAAa,EAAE,SAAS;KACzB,CAAC;;;;gDAC+B;AAOjC;IADC,eAAe,EAAE;;;;uDACsB;AAI1C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GA6CG;AASH,IAAa,aAAa;IAAS,iCAAiB;IAApD;;IAoBA,CAAC;IAlBC;;;;OAIG;IAEH,8BAAM,GAAN,UAAO,KAAa;QAClB,MAAM,CAAC,IAAI,OAAO,CAAC,UAAC,GAAa,EAAE,GAAa;YAC9C,IAAM,QAAQ,GAAG,IAAI,CAAC,eAAa,CAAC,SAAS,EAAE,CAAC,CAAC,cAAM,OAAA,GAAG,CAAC,IAAI,mBAAmB,CAAC,QAAQ,CAAC,CAAC,EAAtC,CAAsC,EAAE,GAAG,EAAE,KAAK,CAAC,CAAC;QAC7G,CAAC,CAAC,CAAC;IACL,CAAC;IAQH,oBAAC;AAAD,CApBA,AAoBC,CApBkC,iBAAiB,GAoBnD;AANM,wBAAU,GAA0B;IAC3C,EAAE,IAAI,EAAE,UAAU,EAAE;CACnB,CAAC;AACF,kBAAkB;AACX,4BAAc,GAAmE,cAAM,OAAA,EAC7F,EAD6F,CAC7F,CAAC;AAXA;IADC,YAAY,EAAE;;;;2CAKd;AAZU,aAAa;IARzB,MAAM,CAAC;QACN,UAAU,EAAE,eAAe;QAC3B,MAAM,EAAE,+BAA+B;QACvC,SAAS,EAAE,+BAA+B;QAC1C,IAAI,EAAE,yDAAyD;QAC/D,SAAS,EAAE,CAAC,SAAS,EAAE,SAAS,EAAE,KAAK,EAAE,SAAS,CAAC;KACpD,CAAC;GAEW,aAAa,CAoBzB;SApBY,aAAa","file":"index.js","sourceRoot":"","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { CordovaInstance, Plugin, CordovaCheck, IonicNativePlugin } from '@ionic-native/core';\r\n\r\n/**\r\n * @hidden\r\n */\r\nexport class SecureStorageObject {\r\n\r\n  constructor(private _objectInstance: any) { }\r\n\r\n  /**\r\n   * Gets a stored item\r\n   * @param key {string}\r\n   * @returns {Promise<string>}\r\n   */\r\n  @CordovaInstance({\r\n    callbackOrder: 'reverse'\r\n  })\r\n  get(key: string): Promise<string> { return; }\r\n\r\n  /**\r\n   * Stores a value\r\n   * @param key {string}\r\n   * @param value {string}\r\n   * @returns {Promise<any>}\r\n   */\r\n  @CordovaInstance({\r\n    callbackOrder: 'reverse'\r\n  })\r\n  set(key: string, value: string): Promise<any> { return; }\r\n\r\n  /**\r\n   * Removes a single stored item\r\n   * @param key {string}\r\n   * @returns {Promise<string>} returns a promise that resolves with the key that was removed\r\n   */\r\n  @CordovaInstance({\r\n    callbackOrder: 'reverse'\r\n  })\r\n  remove(key: string): Promise<string> { return; }\r\n\r\n  /**\r\n   * Get all references from the storage.\r\n   * @returns {Promise<string[]>} returns a promise that resolves with array of keys storage\r\n   */\r\n  @CordovaInstance({\r\n    callbackOrder: 'reverse'\r\n  })\r\n  keys(): Promise<string[]> { return; }\r\n\r\n  /**\r\n   * Clear all references from the storage.\r\n   * @returns {Promise<any>}\r\n   */\r\n  @CordovaInstance({\r\n    callbackOrder: 'reverse'\r\n  })\r\n  clear(): Promise<any> { return; }\r\n\r\n  /**\r\n   * Brings up the screen-lock settings\r\n   * @returns {Promise<any>}\r\n   */\r\n  @CordovaInstance()\r\n  secureDevice(): Promise<any> { return; }\r\n\r\n}\r\n\r\n/**\r\n * @name Secure Storage\r\n * @description\r\n * This plugin gets, sets and removes key,value pairs from a device's secure storage.\r\n *\r\n * Requires Cordova plugin: `cordova-plugin-secure-storage`. For more info, please see the [Cordova Secure Storage docs](https://github.com/Crypho/cordova-plugin-secure-storage).\r\n *\r\n * The browser platform is supported as a mock only. Key/values are stored unencrypted in localStorage.\r\n *\r\n * @usage\r\n *\r\n * ```typescript\r\n * import { SecureStorage, SecureStorageObject } from '@ionic-native/secure-storage';\r\n *\r\n * constructor(private secureStorage: SecureStorage) { }\r\n *\r\n * ...\r\n *\r\n * this.secureStorage.create('my_store_name')\r\n *   .then((storage: SecureStorageObject) => {\r\n *\r\n *      storage.get('key')\r\n *        .then(\r\n *          data => console.log(data),\r\n *          error => console.log(error)\r\n *      );\r\n *\r\n *      storage.set('key', 'value')\r\n *        .then(\r\n *         data => console.log(data),\r\n *          error => console.log(error)\r\n *      );\r\n *\r\n *      storage.remove('key')\r\n *      .then(\r\n *          data => console.log(data),\r\n *          error => console.log(error)\r\n *      );\r\n *\r\n *   });\r\n *\r\n *\r\n * ```\r\n * @classes\r\n * SecureStorageObject\r\n */\r\n@Plugin({\r\n  pluginName: 'SecureStorage',\r\n  plugin: 'cordova-plugin-secure-storage',\r\n  pluginRef: 'cordova.plugins.SecureStorage',\r\n  repo: 'https://github.com/Crypho/cordova-plugin-secure-storage',\r\n  platforms: ['Android', 'Browser', 'iOS', 'Windows']\r\n})\r\n\r\nexport class SecureStorage extends IonicNativePlugin {\r\n\r\n  /**\r\n   * Creates a namespaced storage.\r\n   * @param store {string}\r\n   * @returns {Promise<SecureStorageObject>}\r\n   */\r\n  @CordovaCheck()\r\n  create(store: string): Promise<SecureStorageObject> {\r\n    return new Promise((res: Function, rej: Function) => {\r\n      const instance = new (SecureStorage.getPlugin())(() => res(new SecureStorageObject(instance)), rej, store);\r\n    });\r\n  }\r\n\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}